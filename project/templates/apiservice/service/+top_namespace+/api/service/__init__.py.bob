# -*- coding: utf-8 -*-
"""
REST Service '{{{top_namespace}}}-api-service'

"""
import os
import logging
import httplib

from pyramid.response import FileResponse

from pp.web.base import restfulhelpers


def get_log(e=None):
    return logging.getLogger("{0}.{1}".format(__name__, e) if e else __name__)


def favicon_view(request):
    here = os.path.dirname(__file__)
    icon = os.path.join(here, 'static', 'favicon.ico')
    return FileResponse(icon, request=request)


def includeme(config):
    """ This function returns a Pyramid WSGI application.
    """
    config.add_route('favicon', '/favicon.ico')
    config.add_view(favicon_view, route_name='favicon')

    config.add_static_view('static', 'static', cache_max_age=3600)

    # Add templates to search path
    config.add_jinja2_search_path("%s:templates" % __name__)

    not_found = restfulhelpers.xyz_handler(httplib.NOT_FOUND)
    config.add_view(not_found, context='pyramid.exceptions.NotFound')

    bad_request = restfulhelpers.xyz_handler(httplib.BAD_REQUEST)
    config.add_view(
        bad_request,
        context='pyramid.httpexceptions.HTTPBadRequest'
    )

    # Attach the user service to requests request.user.<methods>
    config.set_request_property(
        '{{{top_namespace}}}.api.model.user_api:UserAPI',
        name='user',
        reify=True
    )

    # Attach the request globals for templates.
    config.set_request_property(
        '{{{top_namespace}}}.api.service.globals:RequestGlobals',
        name='globals',
        reify=True
    )

    # Maps to the status page:
    config.add_route('home', '/')

    # ping to check if up and version details:
    config.add_route('api_ping', '/ping')
    config.add_route('api_ping2', '/ping/')

    config.add_route('api_login', '/login/{username}/')
    config.add_route('api_login2', '/login/{username}')

    # user related URIs
    config.add_route('user_profile', '/account/{username}/')

    config.scan(
        "{{{top_namespace}}}.api.service.views",
        ignore="{{{top_namespace}}}.api.service.tests"
    )
